# This GitHub Actions workflow runs on manual trigger on a branch of a
# repository, and configures the React app in the AWS Amplify Console.
#
# First, the GitHub Action deploys the 'stack.yaml' AWS CloudFormation stack
# to your AWS Account. This stack configures the React app in the AWS Amplify Console.
#
# Then, you need to trigger a first build in the AWS Amplify Console to
# fully configure it.
# """
# Deploy on release tag from GitHub.
# """
name: DeployAWS

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
        - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  generate:
    name: Create release-artifacts
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@master
        - name: Generate
          uses: skx/github-action-build@master
          with:
            builder: .github/build  
        - name: Upload the artifacts
          uses: skx/github-action-publish-binaries@master
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            args: 'example-*'
        
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
            aws-region: us-east-2
        
        - name: Push to EC2
          id: deploy
          run: |
            # Assuming the Deployment Group is already setup
            aws deploy create-deployment \
            --application-name codedeploy \
            --deployment-group-name githubdeploy \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }}

        
# on:
#     workflow_dispatch:
#       inputs:
#         region:
#           description: 'AWS Region to deploy to'
#           required: true
#           default: 'us-east-2'
  
#   name: Deploy
  
#   jobs:
#     # Deploy the React app to AWS Amplify Console.
#     # This job will run on every code change to the master branch, but will only deploy
#     # changes if the infrastructure CloudFormation template in the repository changes.
#     amplify:
#       name: Deploy to Amplify Console
#       runs-on: ubuntu-latest
#       outputs:
#         env-name: ${{ steps.env-name.outputs.environment }}
#       steps:
#       - name: Checkout
#         uses: actions/checkout@v2
  
#       - name: Configure AWS credentials
#         id: creds
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
#           aws-region: ${{ github.event.inputs.region }}
     
#     - name: Copy files to the test website with the AWS CLI
#           run: |
#             aws s3 sync . s3://my-s3-test-website-bucket
#       - name: Configure environment name
#         id: env-name
#         env:
#           REPO: ${{ github.repository }}
#         run: |
#           ENVIRONMENT=`echo $REPO | tr "/" "-"`
#           echo "Environment name: $ENVIRONMENT"
#           echo "::set-output name=environment::$ENVIRONMENT"
#       - name: Deploy to Amplify Console with CloudFormation
#         id: amplify-stack
#         uses: aws-actions/aws-cloudformation-github-deploy@v1
#         with:
#           name: ${{ steps.env-name.outputs.environment }}
#           template: stack.yaml
#           no-fail-on-empty-changeset: "1"
#           parameter-overrides: >-
#             Name=${{ steps.env-name.outputs.environment }},
#             Repository=https://github.com/${{ github.repository }},
#             OauthToken=${{ secrets.AMPLIFY_TOKEN }},
#             Domain=${{ secrets.AMPLIFY_DOMAIN }}
#       # When a domain is configured to the stack,
#       # it gets configured in the environment and printed to the console.
#       - name: Print default domain
#         env:
#           DefaultDomain: ${{ steps.amplify-stack.outputs.DefaultDomain }}
#         run: |
#           echo "Default Domain: $DefaultDomain"


          